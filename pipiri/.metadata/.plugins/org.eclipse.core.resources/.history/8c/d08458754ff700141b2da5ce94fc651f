# -*- coding: utf-8 -*-. 
"""
    Universidad Simon Bolivar.
    Ingenieria de Software I
    Integrantes:
        *.- Neylin Belisario. Carnet: 09-10093 
        *.- Oriana Graterol.  Carnet: 10-11248
    Equipo: SoftDev
    Trimestre Abril - Julio 2015
"""
    
# --------------------- IMPORTACIONES --------------------- #
import unittest

import os
import sys

# Esto permite usar user.py
sys.path.append('../../data')
import model

# --------------------------------------------------------- #


class TestUser(unittest.TestCase):
    
    ''' Casos de insert'''
    
    
    def test1_userExist(self):
        tempUser = clsUser()
        self.assertIsNotNone( tempUser )
        session.query( model.User ).delete()
        
    def test2InsertInvalidoIDdptString(self):
        usuario = clsUser()
        resultado = usuario.insert_user("OrianaGraterol","oggs22",12345678*A," oggs22@gmail.com","a11",2)
        self.assertTrue(resultado)
        
    def test3InsertInvalidoIDrolString(self):
        usuario = clsUser()
        resultado = usuario.insert_user("OrianaGraterol","oggs22",12345678*A," oggs22@gmail.com",11,"as2")
        self.assertTrue(resultado)
        
    def test4InsertInvalidoFullName51(self):
        usuario = clsUser()
        resultado = usuario.insert_user("qwertyuiopaOrianaGraterolGGDJDGJSsgdhsafsyw8t743yuy","oggs22",12345678*A," oggs22@gmail.com",11,"as2")
        self.assertTrue(resultado)
    


def test1_dptExist(self):
    tempDpt = clsDpt()
    self.assertIsNotNone( tempDpt )
    session.query( model.Dpt ).delete()  # Se limpia la base de datos.


 ### CASOS VALIDOS( Casos Interiores ).
    # Test 2: Insertar un dpt que no existe.
    
def test2_insert_dptNoExist(self):
    session.query(model.Dpt).delete()  # Se limpia la base de datos.
    tempDpt = clsDpt()
    newIdDpt = 2
    newNameDpt = 'dpt2.0'
    result = tempDpt.insert_dpt( newIdDpt, newNameDpt )
    self.assertTrue(result)
    
    # Test 3: Insertar un dpt que ya existe.
def test3_insert_dptExist(self):
    tempDpt = clsDpt()
    newIdDpt = 2
    newNameDpt = 'dpt2.0'
    result = tempDpt.insert_dpt( newIdDpt, newNameDpt )
    self.assertFalse(result)
